#!/bin/bash

# for omxplayer.bin
export LD_LIBRARY_PATH="/opt/vc/lib:/usr/lib/omxplayer"

record_start() {
  rm -f /tmp/fifo
  mkfifo /tmp/fifo

  # record
  raspivid -w 1280 -h 720 -t 0 -fps 25 -g 25 -vf -hf -n -o - |
    # duplicate the stream to stdout AND to the defined subshell, which bufferize to a fifo
    tee >(mbuffer -m 30m > /tmp/fifo) |
    # keep the last n bytes, and cut on a NAL IDR (keyframe) to a file
    pibuf 30m > /tmp/record.h264 &
  # get the pibuf PID
  pibuf_pid=$!
  # get the raspivid PID
  raspivid_pid=$(jobs -p)

  # live-stream with a short delay (useful for quick replays)
  omxplayer.bin --video_queue 1 /tmp/fifo &
  # get the omxplayer PID
  omxplayer_pid=$!
}

record_stop() {
  kill $omxplayer_pid
  kill $raspivid_pid
  wait $pibuf_pid # wait for pibuf to write the record
}

play_start() {
  # play the record
  omxplayer.bin /tmp/record.h264 &
  #get the omxplayer PID
  omxplayer_pid=$!
}

play_stop() {
  kill $omxplayer_pid
}

stop_current() {
  case "$cur" in
  r) record_stop;;
  p) play_stop;;
  esac
}

unset cur
unset raspivid_pid
unset pibuf_pid
unset omxplayer_pid
action=r #record
until [ "$action" = q ]
do
  case "$action" in
  r) stop_current; cur=r; record_start;;
  p) stop_current; cur=p; play_start;;
  # 0x1b is the escape key
  $'\x1b') stop_current; exit 0;;
  esac
  read -sn1 action
done
